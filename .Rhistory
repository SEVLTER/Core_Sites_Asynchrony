# give R a blank slate
rm(list=ls(all=TRUE))
# load libraries
library(nlme)
library(tidyverse)
library(plyr)
library(codyn)
library(emmeans)
library(reshape2)
library(car)
library(visreg)
# Read in data
w.sync<-read.csv("asynchrony_stability_allquads.csv",stringsAsFactors = T)
View(w.sync)
inUrl1  <- "https://pasta.lternet.edu/package/data/eml/knb-lter-sev/157/337143/c20901298ac07da5f7e73cc0abf275b4"
infile1 <- tempfile()
try(download.file(inUrl1,infile1,method="curl"))
if (is.na(file.size(infile1))) download.file(inUrl1,infile1,method="auto")
dt1 <-read.csv(infile1,header=F
,skip=1
,sep=","
,quot='"'
, col.names=c(
"Year",
"Season",
"Date",
"Site",
"Treatment",
"Species",
"Observation",
"Count",
"Cover",
"Height",
"Live_Weight",
"Dead_Weight",
"Book",
"Comments"    ), check.names=TRUE)
unlink(infile1)
# Read in most recent NPP Biomass data (will need to be downloaded locally)
sync <- read.csv("Sevilleta_allbiomass_05Feb2023.csv")
# Read in most recent NPP Biomass data (will need to be downloaded locally)
w.mass <- read.csv("Sevilleta_allbiomass_05Feb2023.csv")
unique(w.mass$site)
w.mass[w.mass$site=="warming"]
w.mass[w.mass$site=="warming",]
#### Calculate Synchrony from NPP Data ####
# create unique identifier for quadrat - need to adjust this line based on the focal site or experiment
# for core sites need site, web, plot, quad to ID the quadrat - this includes everything, clunky, but comprehensive
w.mass <- w.mass %>%
filter(site="warming") %>%
mutate(quad_ID =
as.factor(
paste(treatment,plot,quad,sep="_"))
)
#### Calculate Synchrony from NPP Data ####
# create unique identifier for quadrat - need to adjust this line based on the focal site or experiment
# for core sites need site, web, plot, quad to ID the quadrat - this includes everything, clunky, but comprehensive
w.mass <- w.mass %>%
filter(site=="warming") %>%
mutate(quad_ID =
as.factor(
paste(treatment,plot,quad,sep="_"))
)
View(w.mass)
?dcast
# cast the data to create columns for each plant species so zeros are added for dates where species was absent
# for all quads
w.mass_species<-dcast(w.mass, year +site +season +season.precip +GDD +SPEI.comp +SiteCluster +MetStation +treatment +plot +quad +quad_ID ~ kartez, sum, value.var="biomass.BM", fill=0)
View(w.mass_species)
# cast the data to create columns for each plant species so zeros are added for dates where species was absent
# for all quads
w.mass_species <- w.mass %>%
dcast(year +site +season +season.precip +GDD +SPEI.comp +SiteCluster +MetStation +treatment +plot +quad +quad_ID ~ kartez, sum, value.var="biomass.BM", fill=0) %>%
# get rid of column called EMPTY - this was a placeholder for quadrats that had bare ground, not a real species
select(-EMPTY) %>%
# combine two components of estimated LATR2 biomass
mutate(LATR2 = LATR2 + STEM) %>%
select(-STEM)
# cast the data to create columns for each plant species so zeros are added for dates where species was absent
# for all quads
w.mass_species <- w.mass %>%
dcast(year +site +season +season.precip +GDD +SPEI.comp +SiteCluster +MetStation +treatment +plot +quad +quad_ID ~ kartez, sum, value.var="biomass.BM", fill=0) %>%
# get rid of column called EMPTY - this was a placeholder for quadrats that had bare ground, not a real species
select(-EMPTY)
summary(w.mass_species)
# calculate total biomass
w.mass_species$totmass<-rowSums(w.mass_species[,17:338])
# calculate total biomass
w.mass_species$totmass<-rowSums(w.mass_species[,!(1:16)])
# add richness, diversity, evenness
mass_species$richness<-specnumber(mass_species[,!(1:12)])
mass_species$shannonH<-diversity(mass_species[,!(1:12)])
library(vegan)
?diversity
?specnumber
?shannonH
# calculate total biomass by summing all species columns
# *will need to be changed for each dataframe. In this case the title columns are 1-12
w.mass_species <- w.mass_species %>%
mutate(totmass = rowSums(w.mass_species[,!(1:12)]))
# calculate total biomass by summing all species columns
# *will need to be changed for each dataframe. In this case the title columns are 1-12
w.mass_species <- w.mass_species %>%
mutate(totmass = rowSums(w.mass_species[,!(1:12)]))
w.mass_species$totmass
# calculate total biomass by summing all species columns
# *will need to be changed for each dataframe. In this case the title columns are 1-12
w.mass_species$totmass<-rowSums(w.mass_species[,!(1:12)])
# add richness, diversity, evenness
w.mass_species$richness<-specnumber(mass_species[,!(1:12)])
# add richness, diversity, evenness
w.mass_species$richness<-specnumber(w.mass_species[,!(1:12)])
w.mass_species$shannonH<-diversity(w.mass_species[,!(1:12)])
# cast the data to create columns for each plant species so zeros are added for dates where species was absent
# for all quads
w.mass_species <- w.mass %>%
dcast(year +site +season +season.precip +GDD +SPEI.comp +SiteCluster +MetStation +treatment +plot +quad +quad_ID ~ kartez, sum, value.var="biomass.BM", fill=0) %>%
# get rid of column called EMPTY - this was a placeholder for quadrats that had bare ground, not a real species
select(-EMPTY)
# calculate total biomass by summing all species columns
# *will need to be changed for each dataframe. In this case the title columns are 1-12
sp_cols <- colnames(w.mass_species[,!(1:12)])
ncol(w.mass_species)
# calculate total biomass by summing all species columns
# *will need to be changed for each dataframe. In this case the title columns
# are 1-12 and total columns are given as 106 by ncol(w.mass_species)
w.mass_species$totmass<-rowSums(w.mass_species[,13:106])
# add richness, diversity, evenness
w.mass_species$richness<-specnumber(w.mass_species[,13:106])
w.mass_species$shannonH<-diversity(w.mass_species[,13:106])
w.mass_species$evenness<-w.mass_species$shannonH/log(w.mass_species$richness,1)
w.mass_species[w.mass_species$richness==1,]
w.mass_species[w.mass_species$richness==0,]
# create a continuous time variable
w.mass_species$seas<-as.numeric(as.character(recode_factor(w.mass_species$season,fall="0.5",spring="0")))
mass_species$year_seas<-as.factor(mass_species$year+mass_species$seas)
w.mass_species$year_seas<-as.factor(w.mass_species$year+w.mass_species$seas)
summary(w.mass_species$year_seas)
w.mass_species$time<-as.numeric(as.factor(w.mass_species$year_seas))
summary(w.mass_species$time)
w.mass_species$year.f<-as.factor(w.mass_species$year)
